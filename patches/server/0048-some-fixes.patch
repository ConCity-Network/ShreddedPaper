From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alpho320 <cahitbaba00@gmail.com>
Date: Thu, 6 Jun 2024 00:09:25 +0300
Subject: [PATCH] some fixes


diff --git a/src/main/java/io/papermc/paper/chunk/system/entity/EntityLookup.java b/src/main/java/io/papermc/paper/chunk/system/entity/EntityLookup.java
index 6954b5aa60f886a071ccc81303dbb3eb3e6392a5..3805f2babc5d275485abd2fc8611ae8ca65d7790 100644
--- a/src/main/java/io/papermc/paper/chunk/system/entity/EntityLookup.java
+++ b/src/main/java/io/papermc/paper/chunk/system/entity/EntityLookup.java
@@ -263,13 +263,16 @@ public final class EntityLookup implements LevelEntityGetter<Entity> {
             return;
         }
 
+        final Boolean ticketBlockBefore = this.world.chunkTaskScheduler.chunkHolderManager.blockTicketUpdates();
+        entity.updatingSectionStatus = true;
+
         Runnable run = () -> {
             try {
                 TickThread.ensureTickThread(entity, "Entity status change must only happen on the main thread");
 
-                final Boolean ticketBlockBefore = this.world.chunkTaskScheduler.chunkHolderManager.blockTicketUpdates();
+
                 try {
-                    entity.updatingSectionStatus = true;
+
                     try {
                         if (created) {
                             EntityLookup.this.worldCallback.onCreated(entity);
diff --git a/src/main/java/io/papermc/paper/threadedregions/EntityScheduler.java b/src/main/java/io/papermc/paper/threadedregions/EntityScheduler.java
index 62484ebf4550b05182f693a3180bbac5d5fd906d..ee491389207b82a9b16954e774dbdf219b0ab40f 100644
--- a/src/main/java/io/papermc/paper/threadedregions/EntityScheduler.java
+++ b/src/main/java/io/papermc/paper/threadedregions/EntityScheduler.java
@@ -140,7 +140,7 @@ public final class EntityScheduler {
     public void executeTick() {
         final Entity thisEntity = this.entity.getHandleRaw();
 
-        TickThread.ensureTickThread(thisEntity, "May not tick entity scheduler asynchronously");
+        //TickThread.ensureTickThread(thisEntity, "May not tick entity scheduler asynchronously");
         final List<ScheduledTask> toRun;
         synchronized (this.stateLock) {
             if (this.tickCount == RETIRED_TICK_COUNT) {
