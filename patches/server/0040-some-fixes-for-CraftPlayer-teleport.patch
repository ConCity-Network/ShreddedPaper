From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alpho320 <cahitbaba00@gmail.com>
Date: Wed, 5 Jun 2024 20:56:31 +0300
Subject: [PATCH] some fixes for CraftPlayer#teleport.


diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 7219d5e7369daf3ca0909b8630230fbfe6b4b9d9..d89f5ac4016ee6142cda412c1b65e753b1b88f53 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -5,6 +5,7 @@ import com.google.common.collect.ImmutableSet;
 import com.google.common.io.BaseEncoding;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.util.Pair;
+import io.multipaper.shreddedpaper.threading.SynchronousPluginExecution;
 import io.netty.buffer.Unpooled;
 import io.papermc.paper.util.TickThread;
 import it.unimi.dsi.fastutil.shorts.ShortArraySet;
@@ -1496,9 +1497,15 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
             // Paper end - Teleport API
         } else {
             // The respawn reason should never be used if the passed location is non null.
-            if (!TickThread.isTickThreadFor(entity.serverLevel(), entity.position()) || !TickThread.isTickThreadFor(toWorld, CraftLocation.toBlockPosition(to)))
-                //throw new UnsupportedOperationException("Cannot respawn player synchronously"); // ShreddedPaper - make sure following will be run on this thread
-            this.server.getHandle().respawnAsync(entity, toWorld, true, to, !toWorld.paperConfig().environment.disableTeleportationSuffocationCheck, null).join(); // Paper // ShreddedPaper - will be run on this thread
+            if (!TickThread.isTickThreadFor(entity.serverLevel(), entity.position()) || !TickThread.isTickThreadFor(toWorld, CraftLocation.toBlockPosition(to))){
+                Plugin plugin = SynchronousPluginExecution.getCurrentPlugin(); // ShreddedPaper - synchronous plugin execution
+                Location finalTo = to.clone();
+                entity.getBukkitEntity().getScheduler().run(plugin, task -> {
+                    this.server.getHandle().respawnAsync(entity, toWorld, true, finalTo, !toWorld.paperConfig().environment.disableTeleportationSuffocationCheck, null).join(); // Paper // ShreddedPaper - will be run on this thread
+                }, null);
+            } else {
+                this.server.getHandle().respawnAsync(entity, toWorld, true, to, !toWorld.paperConfig().environment.disableTeleportationSuffocationCheck, null).join(); // Paper // ShreddedPaper - will be run on this thread
+            }
         }
         return true;
     }
